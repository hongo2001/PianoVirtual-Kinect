//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PianoWPFClient.PianoWSClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PianoWSClient.IServicio", CallbackContract=typeof(PianoWPFClient.PianoWSClient.IServicioCallback))]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/IniciarSesion", ReplyAction="http://tempuri.org/IServicio/IniciarSesionResponse")]
        bool IniciarSesion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServicio/IniciarSesion", ReplyAction="http://tempuri.org/IServicio/IniciarSesionResponse")]
        System.IAsyncResult BeginIniciarSesion(System.AsyncCallback callback, object asyncState);
        
        bool EndIniciarSesion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/FinalizarSesion", ReplyAction="http://tempuri.org/IServicio/FinalizarSesionResponse")]
        bool FinalizarSesion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServicio/FinalizarSesion", ReplyAction="http://tempuri.org/IServicio/FinalizarSesionResponse")]
        System.IAsyncResult BeginFinalizarSesion(System.AsyncCallback callback, object asyncState);
        
        bool EndFinalizarSesion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicio/PublicarNota")]
        void PublicarNota(string nota);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServicio/PublicarNota")]
        System.IAsyncResult BeginPublicarNota(string nota, System.AsyncCallback callback, object asyncState);
        
        void EndPublicarNota(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicio/EjecutarNota")]
        void EjecutarNota(string nota);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IServicio/EjecutarNota")]
        System.IAsyncResult BeginEjecutarNota(string nota, System.AsyncCallback callback, object asyncState);
        
        void EndEjecutarNota(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : PianoWPFClient.PianoWSClient.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IniciarSesionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IniciarSesionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FinalizarSesionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FinalizarSesionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.DuplexClientBase<PianoWPFClient.PianoWSClient.IServicio>, PianoWPFClient.PianoWSClient.IServicio {
        
        private BeginOperationDelegate onBeginIniciarSesionDelegate;
        
        private EndOperationDelegate onEndIniciarSesionDelegate;
        
        private System.Threading.SendOrPostCallback onIniciarSesionCompletedDelegate;
        
        private BeginOperationDelegate onBeginFinalizarSesionDelegate;
        
        private EndOperationDelegate onEndFinalizarSesionDelegate;
        
        private System.Threading.SendOrPostCallback onFinalizarSesionCompletedDelegate;
        
        private BeginOperationDelegate onBeginPublicarNotaDelegate;
        
        private EndOperationDelegate onEndPublicarNotaDelegate;
        
        private System.Threading.SendOrPostCallback onPublicarNotaCompletedDelegate;
        
        public ServicioClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<IniciarSesionCompletedEventArgs> IniciarSesionCompleted;
        
        public event System.EventHandler<FinalizarSesionCompletedEventArgs> FinalizarSesionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PublicarNotaCompleted;
        
        public bool IniciarSesion() {
            return base.Channel.IniciarSesion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIniciarSesion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIniciarSesion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIniciarSesion(System.IAsyncResult result) {
            return base.Channel.EndIniciarSesion(result);
        }
        
        private System.IAsyncResult OnBeginIniciarSesion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginIniciarSesion(callback, asyncState);
        }
        
        private object[] OnEndIniciarSesion(System.IAsyncResult result) {
            bool retVal = this.EndIniciarSesion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIniciarSesionCompleted(object state) {
            if ((this.IniciarSesionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IniciarSesionCompleted(this, new IniciarSesionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IniciarSesionAsync() {
            this.IniciarSesionAsync(null);
        }
        
        public void IniciarSesionAsync(object userState) {
            if ((this.onBeginIniciarSesionDelegate == null)) {
                this.onBeginIniciarSesionDelegate = new BeginOperationDelegate(this.OnBeginIniciarSesion);
            }
            if ((this.onEndIniciarSesionDelegate == null)) {
                this.onEndIniciarSesionDelegate = new EndOperationDelegate(this.OnEndIniciarSesion);
            }
            if ((this.onIniciarSesionCompletedDelegate == null)) {
                this.onIniciarSesionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIniciarSesionCompleted);
            }
            base.InvokeAsync(this.onBeginIniciarSesionDelegate, null, this.onEndIniciarSesionDelegate, this.onIniciarSesionCompletedDelegate, userState);
        }
        
        public bool FinalizarSesion() {
            return base.Channel.FinalizarSesion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFinalizarSesion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFinalizarSesion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndFinalizarSesion(System.IAsyncResult result) {
            return base.Channel.EndFinalizarSesion(result);
        }
        
        private System.IAsyncResult OnBeginFinalizarSesion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginFinalizarSesion(callback, asyncState);
        }
        
        private object[] OnEndFinalizarSesion(System.IAsyncResult result) {
            bool retVal = this.EndFinalizarSesion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFinalizarSesionCompleted(object state) {
            if ((this.FinalizarSesionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FinalizarSesionCompleted(this, new FinalizarSesionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FinalizarSesionAsync() {
            this.FinalizarSesionAsync(null);
        }
        
        public void FinalizarSesionAsync(object userState) {
            if ((this.onBeginFinalizarSesionDelegate == null)) {
                this.onBeginFinalizarSesionDelegate = new BeginOperationDelegate(this.OnBeginFinalizarSesion);
            }
            if ((this.onEndFinalizarSesionDelegate == null)) {
                this.onEndFinalizarSesionDelegate = new EndOperationDelegate(this.OnEndFinalizarSesion);
            }
            if ((this.onFinalizarSesionCompletedDelegate == null)) {
                this.onFinalizarSesionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFinalizarSesionCompleted);
            }
            base.InvokeAsync(this.onBeginFinalizarSesionDelegate, null, this.onEndFinalizarSesionDelegate, this.onFinalizarSesionCompletedDelegate, userState);
        }
        
        public void PublicarNota(string nota) {
            base.Channel.PublicarNota(nota);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPublicarNota(string nota, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPublicarNota(nota, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPublicarNota(System.IAsyncResult result) {
            base.Channel.EndPublicarNota(result);
        }
        
        private System.IAsyncResult OnBeginPublicarNota(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string nota = ((string)(inValues[0]));
            return this.BeginPublicarNota(nota, callback, asyncState);
        }
        
        private object[] OnEndPublicarNota(System.IAsyncResult result) {
            this.EndPublicarNota(result);
            return null;
        }
        
        private void OnPublicarNotaCompleted(object state) {
            if ((this.PublicarNotaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PublicarNotaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PublicarNotaAsync(string nota) {
            this.PublicarNotaAsync(nota, null);
        }
        
        public void PublicarNotaAsync(string nota, object userState) {
            if ((this.onBeginPublicarNotaDelegate == null)) {
                this.onBeginPublicarNotaDelegate = new BeginOperationDelegate(this.OnBeginPublicarNota);
            }
            if ((this.onEndPublicarNotaDelegate == null)) {
                this.onEndPublicarNotaDelegate = new EndOperationDelegate(this.OnEndPublicarNota);
            }
            if ((this.onPublicarNotaCompletedDelegate == null)) {
                this.onPublicarNotaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPublicarNotaCompleted);
            }
            base.InvokeAsync(this.onBeginPublicarNotaDelegate, new object[] {
                        nota}, this.onEndPublicarNotaDelegate, this.onPublicarNotaCompletedDelegate, userState);
        }
    }
}
